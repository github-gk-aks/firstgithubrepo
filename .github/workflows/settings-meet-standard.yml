name: General Settings Meet Standard

on:
  push
  #workflow_dispatch:
    # inputs:
    #   param1:
    #     description: 'Parameter 1'
    #     required: true
    #   param2:
    #     description: 'Parameter 2'
    #     required: true

jobs:
  setting-meet-standard:
    runs-on: ubuntu-latest

    steps:
      - name: Enable Different Settings for Repository
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GK_PAT}}
          script: |
            await github.rest.repos.update({
              owner: '${{ github.repository_owner }}',
              repo: '${{ github.event.repository.name }}',
              has_issues: true,
              has_wiki: false,
              has_projects: false,
              allow_merge_commit: true,
              allow_squash_merge: true,
              allow_rebase_merge: true,
              allow_auto_merge: false,
              delete_branch_on_merge: true
            });

      - name: Determine Default Branch
        id: default-branch
        run: echo "::set-output name=default_branch::$(git ls-remote --symref https://github.com/${{ github.repository }} HEAD | awk -F '/' '{print $NF}')"

      - name: Enable Branch Protection Rule for Repo
        uses: actions/github-script@v6
        with:
         github-token: ${{ secrets.GK_PAT}}
         script: |
           const defaultBranch = '${{ steps.default-branch.outputs.default_branch }}';
           await github.rest.repos.updateBranchProtection({
             owner: '${{ github.repository_owner }}',
             repo: '${{ github.event.repository.name }}',
             branch: "defaultBranch",
             required_pull_request_reviews: {
                dismiss_stale_reviews: true,
                require_code_owner_reviews: true,
                required_approving_review_count: 2,
                # dismissal_restrictions: {
                #   #users: [],
                #   teams: [],
                #   #apps: []
                # },
                bypass_pull_request_allowances: false
              },
             restrictions: {
                #users: [], # Add specific users if needed
                teams: [], # Add specific teams if needed
                #apps: []   # Add specific apps if needed
              },
             enforce_admins: true, # Set to true if you want to enforce protection for admins
             require_conversation_resolution: true,
            #  required_status_checks: {
            #     strict: true,
            #     contexts: [] # Add specific status check contexts if needed
            #   },
             required_linear_history: true,
             allow_force_pushes: false,
             allow_deletions: false,
            });

      - name: Enable Vulnerability alerts
        uses: actions/github-script@v6
        with:
         github-token: ${{ secrets.GK_PAT }}
         script: |
           await github.rest.repos.enableVulnerabilityAlerts({
            owner: '${{ github.repository_owner }}',
            repo: '${{ github.event.repository.name }}'
            });

    #   - name: Require Signed Commits
    #     uses: actions/github-script@v6
    #     with:
    #      github-token: ${{ secrets.GK_PAT }}
    #      script: |      
    #        await octokit.rest.repos.createCommitSignatureProtection({
    #         owner: '${{ github.repository_owner }}',
    #         repo: '${{ github.event.repository.name }}',
    #         branch: "defaultBranch"
    #         });   